[Reviewed 09/16/21 14:43 PM MDT]
synopsis: let's check cardinality

details: 

Diagram:
Is there one Pin associated and multiple Pins (one-to-one or one-to-many relationship).

Text:

Please see suggestions in text.

------------------------------------------------------------------------------
[Reviewed 09/15/21 10:32 AM MDT]
synopsis: a few things to improve

details: 

Diagram:

Pin is standing alone. Let's connect that to the other things on the diagram.
Instead of str, let us represent color as Color.

Text:

Please see suggestions in text.

------------------------------------------------------------------------------
[Reviewed 09/14/21 10:45 AM MDT]
synopsis: let's rework a few things

details: 

Diagram:
Do we need Player as an abstraction?
Does the game own the Player?
We can remove the Game Flow from the diagram
The Mastermind class will benefit from having some domain specific methods, like playGuess, for example.

Instead of showing Pin related stuff as field let us show them as relationships.

Can we nerge the Mastermind and Submission into one or is there a good reason to keep them separate? If there is, like to see that in the text. If no, please merge them in the diagram.

Text:
Please see suggestions in text.

------------------------------------------------------------------------------
[Reviewed 09/13/21 12:02 PM MDT]
synopsis: let's not introduce complexity to solve a non-existent requirement

details: 

Diagram:

Composition is restrictive and better to avoid in this level of design. Better to use aggregation (non-shaded diamond) instead of composition (shaded diamond).

Do we need Player as an abstraction?

Do we need interfaces in this design? What benefit do we gain from having that?
Does the given problem ask for different types of players?

Let us show the GUI related items separate from logic.

Text:

Please spellcheck the document.

Please see suggestions in text.


------------------------------------------------------------------------------
